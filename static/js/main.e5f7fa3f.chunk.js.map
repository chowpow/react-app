{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","onAdd","showAdd","Task","singleTask","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","listOfTasks","map","task","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","tasks","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","deleteTask","method","filter","addTask","headers","body","JSON","stringify","responce","toggleReminder","taskToToggle","updateTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5f7fa3f.chunk.js","sourcesContent":["import PropTypes from \"prop-types\"\n\nconst Button = ({color, text, onClick}) => {\n    return (\n    <button \n        onClick = {onClick} style={{backgroundColor: color}} \n        className = \"btn\">\n        {text}\n    </button>\n    )\n}\n\nButton.defaultProps = {\n    color: \"blue\",\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func\n}\n\nexport default Button\n","import Button from \"./Button\"\n\nconst Header = ({onAdd, showAdd}) => {\n   \n\n    return (\n        <header className = \"header\">\n          <h1>Task Tracker</h1>  \n          <Button \n            color = {showAdd ? \"maroon\" : \"green\"} \n            text = {showAdd ? \"Close\" : \"Add\"} \n            onClick = {onAdd}/>\n        </header>\n    )\n}\n\nexport default Header\n","import {FaTimes} from \"react-icons/fa\"\n\nconst Task = ({singleTask, onDelete, onToggle}) => {\n    return (\n        <div className = {`task ${singleTask.reminder ? \"reminder\" : \"\"}`} onDoubleClick = {() => \n        onToggle(singleTask.id)}>\n            <h3>{singleTask.text} <FaTimes style = {{color: \"black\",\n            cursor: \"pointer\"}} \n            onClick = {() => onDelete(singleTask.id)}/></h3>\n            <p>{singleTask.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from \"./Task\"\n\nconst Tasks = ({listOfTasks, onDelete, onToggle}) => {\n    return (\n        <>\n           {listOfTasks.map(task => (\n           <Task key={task.id} singleTask ={task} \n           onDelete = {onDelete} onToggle = {onToggle}/> ))} \n        </>\n    )\n}\n\n// const Tasks = () => {\n   \n// }\n\nexport default Tasks\n","import {useState} from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState(\"\")\n    const [day, setDay] = useState(\"\")\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (!text) {\n            alert('Please add a task')\n            return\n        }\n\n        onAdd({text, day, reminder})\n\n        setText(\"\")\n        setDay(\"\")\n        setReminder(false)\n    }\n\n    return (\n        <form className = \"add-form\" onSubmit = {onSubmit}>\n            <div className = \"form-control\">\n                <label>Task</label>\n                <input type = \"text\" placeholder = \"Add Task\" value = {text} onChange = {(e) =>\n                setText(e.target.value)}/>\n            </div>\n            <div className = \"form-control\">\n                <label>Day & Time</label>\n                <input type = \"text\" placeholder = \"Add Day and Time\" value = {day} onChange = {(e) =>\n                setDay(e.target.value)}/>\n            </div>\n            <div className = \"form-control form-control-check\">\n                <label>Set reminder</label>\n                <input type = \"checkbox\" checked = {reminder}\n                value = {reminder} onChange = {(e) =>\n                setReminder(e.currentTarget.checked)} />\n            </div>\n\n            <input type = \"submit\" value = \"Save Task\" className = \"btn btn-block\" />\n        </form>\n    )\n}\n\nexport default AddTask\n","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { useState, useEffect } from 'react'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState (false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async() => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n// Fetching tasks\nconst fetchTasks = async () => {\n  const res = await fetch(\"http://localhost:5000/tasks\")\n  const data = await res.json()\n\n  return data\n}\n\nconst fetchTask = async (id) => {\n  const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  const data = await res.json()\n\n  return data\n}\n\n// Method for deleting tasks\nconst deleteTask = async (id) => {\n  // Delete request to server\n  await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'DELETE',\n  })\n  setTasks(tasks.filter(task => task.id !== id))\n}\n\n// Method for adding tasks\nconst addTask = async (task) => {\n  // Post request for adding data to server\n  const responce = await fetch(`http://localhost:5000/tasks`, {\n    method: 'POST',\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(task),\n  })\n\n  const data = await responce.json()\n  // const id = Math.floor(Math.random() * 10000) + 1\n\n  // const newTask = {id, ...task}\n  setTasks([...tasks, data])\n}\n\n// Toggle reminder\nconst toggleReminder = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updateTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n  \n  // Put request to update server\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'PUT',\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(updateTask)\n  })\n\n  const data = await res.json()\n  \n  setTasks(tasks.map((task) => \n    task.id === id ? {...task, reminder: data.reminder} : task))\n}\n\nreturn (\n  <div className=\"container\">\n    <Header onAdd = {() => \n    setShowAddTask(!showAddTask)} \n    showAdd = {showAddTask}/>\n    { showAddTask && <AddTask onAdd = {addTask}/>}\n    {tasks.length > 0 ? (\n      <Tasks listOfTasks={tasks} onDelete = {deleteTask}\n      onToggle = {toggleReminder}/>\n    ): (\n      \"No tasks to show\"\n    )}\n  </div>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}